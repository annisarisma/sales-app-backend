
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsersScalarFieldEnum = {
  usr_id: 'usr_id',
  rol_id: 'rol_id',
  username: 'username',
  email: 'email',
  first_name: 'first_name',
  last_name: 'last_name',
  phone_number: 'phone_number',
  address: 'address',
  ctime: 'ctime',
  cusr_id: 'cusr_id',
  mtime: 'mtime',
  musr_id: 'musr_id',
  dtime: 'dtime',
  dusr_id: 'dusr_id'
};

exports.Prisma.User_profilesScalarFieldEnum = {
  usp_id: 'usp_id',
  usr_id: 'usr_id',
  first_name: 'first_name',
  middle_name: 'middle_name',
  last_name: 'last_name',
  birth_date: 'birth_date',
  gender: 'gender',
  phone_number: 'phone_number',
  address: 'address',
  ctime: 'ctime',
  cusr_id: 'cusr_id',
  mtime: 'mtime',
  musr_id: 'musr_id',
  dtime: 'dtime',
  dusr_id: 'dusr_id'
};

exports.Prisma.RolesScalarFieldEnum = {
  rol_id: 'rol_id',
  role_code: 'role_code',
  role_name: 'role_name',
  role_description: 'role_description',
  ctime: 'ctime',
  cusr_id: 'cusr_id',
  mtime: 'mtime',
  musr_id: 'musr_id',
  dtime: 'dtime',
  dusr_id: 'dusr_id'
};

exports.Prisma.CategoriesScalarFieldEnum = {
  cat_id: 'cat_id',
  category_code: 'category_code',
  category_name: 'category_name',
  ctime: 'ctime',
  cusr_id: 'cusr_id',
  mtime: 'mtime',
  musr_id: 'musr_id',
  dtime: 'dtime',
  dusr_id: 'dusr_id'
};

exports.Prisma.ProductsScalarFieldEnum = {
  prd_id: 'prd_id',
  cat_id: 'cat_id',
  product_code: 'product_code',
  product_name: 'product_name',
  ctime: 'ctime',
  cusr_id: 'cusr_id',
  mtime: 'mtime',
  musr_id: 'musr_id',
  dtime: 'dtime',
  dusr_id: 'dusr_id'
};

exports.Prisma.Product_materialScalarFieldEnum = {
  pmt_id: 'pmt_id',
  prd_id: 'prd_id',
  mat_id: 'mat_id',
  quantity: 'quantity',
  ctime: 'ctime',
  cusr_id: 'cusr_id',
  mtime: 'mtime',
  musr_id: 'musr_id',
  dtime: 'dtime',
  dusr_id: 'dusr_id'
};

exports.Prisma.UnitsScalarFieldEnum = {
  unt_id: 'unt_id',
  unit_code: 'unit_code',
  unit_name: 'unit_name',
  ctime: 'ctime',
  cusr_id: 'cusr_id',
  mtime: 'mtime',
  musr_id: 'musr_id',
  dtime: 'dtime',
  dusr_id: 'dusr_id'
};

exports.Prisma.SuppliersScalarFieldEnum = {
  sup_id: 'sup_id',
  supplier_name: 'supplier_name',
  supplier_phone: 'supplier_phone',
  supplier_address: 'supplier_address',
  supplier_email: 'supplier_email',
  ctime: 'ctime',
  cusr_id: 'cusr_id',
  mtime: 'mtime',
  musr_id: 'musr_id',
  dtime: 'dtime',
  dusr_id: 'dusr_id'
};

exports.Prisma.MaterialsScalarFieldEnum = {
  mat_id: 'mat_id',
  unt_id: 'unt_id',
  sup_id: 'sup_id',
  material_code: 'material_code',
  material_brand: 'material_brand',
  material_name: 'material_name',
  ctime: 'ctime',
  cusr_id: 'cusr_id',
  mtime: 'mtime',
  musr_id: 'musr_id',
  dtime: 'dtime',
  dusr_id: 'dusr_id'
};

exports.Prisma.Material_stockScalarFieldEnum = {
  mst_id: 'mst_id',
  mat_id: 'mat_id',
  pod_id: 'pod_id',
  type: 'type',
  is_active: 'is_active',
  ctime: 'ctime',
  cusr_id: 'cusr_id',
  mtime: 'mtime',
  musr_id: 'musr_id',
  dtime: 'dtime',
  dusr_id: 'dusr_id'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  users: 'users',
  user_profiles: 'user_profiles',
  roles: 'roles',
  categories: 'categories',
  products: 'products',
  product_material: 'product_material',
  units: 'units',
  suppliers: 'suppliers',
  materials: 'materials',
  material_stock: 'material_stock'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
